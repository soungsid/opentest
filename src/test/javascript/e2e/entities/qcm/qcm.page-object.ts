import { element, by, ElementFinder } from 'protractor';

export class QcmComponentsPage {
  createButton = element(by.id('jh-create-entity'));
  deleteButtons = element.all(by.css('jhi-qcm div table .btn-danger'));
  title = element.all(by.css('jhi-qcm div h2#page-heading span')).first();

  async clickOnCreateButton(timeout?: number) {
    await this.createButton.click();
  }

  async clickOnLastDeleteButton(timeout?: number) {
    await this.deleteButtons.last().click();
  }

  async countDeleteButtons() {
    return this.deleteButtons.count();
  }

  async getTitle() {
    return this.title.getAttribute('jhiTranslate');
  }
}

export class QcmUpdatePage {
  pageTitle = element(by.id('jhi-qcm-heading'));
  saveButton = element(by.id('save-entity'));
  cancelButton = element(by.id('cancel-save'));
  nameInput = element(by.id('field_name'));
  nbQuestionInput = element(by.id('field_nbQuestion'));
  priveeInput = element(by.id('field_privee'));
  qcmQuestionSelect = element(by.id('field_qcmQuestion'));
  qcmTestSelect = element(by.id('field_qcmTest'));

  async getPageTitle() {
    return this.pageTitle.getAttribute('jhiTranslate');
  }

  async setNameInput(name) {
    await this.nameInput.sendKeys(name);
  }

  async getNameInput() {
    return await this.nameInput.getAttribute('value');
  }

  async setNbQuestionInput(nbQuestion) {
    await this.nbQuestionInput.sendKeys(nbQuestion);
  }

  async getNbQuestionInput() {
    return await this.nbQuestionInput.getAttribute('value');
  }

  getPriveeInput(timeout?: number) {
    return this.priveeInput;
  }

  async qcmQuestionSelectLastOption(timeout?: number) {
    await this.qcmQuestionSelect
      .all(by.tagName('option'))
      .last()
      .click();
  }

  async qcmQuestionSelectOption(option) {
    await this.qcmQuestionSelect.sendKeys(option);
  }

  getQcmQuestionSelect(): ElementFinder {
    return this.qcmQuestionSelect;
  }

  async getQcmQuestionSelectedOption() {
    return await this.qcmQuestionSelect.element(by.css('option:checked')).getText();
  }

  async qcmTestSelectLastOption(timeout?: number) {
    await this.qcmTestSelect
      .all(by.tagName('option'))
      .last()
      .click();
  }

  async qcmTestSelectOption(option) {
    await this.qcmTestSelect.sendKeys(option);
  }

  getQcmTestSelect(): ElementFinder {
    return this.qcmTestSelect;
  }

  async getQcmTestSelectedOption() {
    return await this.qcmTestSelect.element(by.css('option:checked')).getText();
  }

  async save(timeout?: number) {
    await this.saveButton.click();
  }

  async cancel(timeout?: number) {
    await this.cancelButton.click();
  }

  getSaveButton(): ElementFinder {
    return this.saveButton;
  }
}

export class QcmDeleteDialog {
  private dialogTitle = element(by.id('jhi-delete-qcm-heading'));
  private confirmButton = element(by.id('jhi-confirm-delete-qcm'));

  async getDialogTitle() {
    return this.dialogTitle.getAttribute('jhiTranslate');
  }

  async clickOnConfirmButton(timeout?: number) {
    await this.confirmButton.click();
  }
}
