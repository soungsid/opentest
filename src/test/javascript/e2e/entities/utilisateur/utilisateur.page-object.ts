import { element, by, ElementFinder } from 'protractor';

export class UtilisateurComponentsPage {
  createButton = element(by.id('jh-create-entity'));
  deleteButtons = element.all(by.css('jhi-utilisateur div table .btn-danger'));
  title = element.all(by.css('jhi-utilisateur div h2#page-heading span')).first();
  noResult = element(by.id('no-result'));
  entities = element(by.id('entities'));

  async clickOnCreateButton(): Promise<void> {
    await this.createButton.click();
  }

  async clickOnLastDeleteButton(): Promise<void> {
    await this.deleteButtons.last().click();
  }

  async countDeleteButtons(): Promise<number> {
    return this.deleteButtons.count();
  }

  async getTitle(): Promise<string> {
    return this.title.getAttribute('jhiTranslate');
  }
}

export class UtilisateurUpdatePage {
  pageTitle = element(by.id('jhi-utilisateur-heading'));
  saveButton = element(by.id('save-entity'));
  cancelButton = element(by.id('cancel-save'));

  lastnameInput = element(by.id('field_lastname'));
  firstnameInput = element(by.id('field_firstname'));
  emailInput = element(by.id('field_email'));
  linkedinInput = element(by.id('field_linkedin'));
  googleplusInput = element(by.id('field_googleplus'));
  roleInput = element(by.id('field_role'));

  qcmSelect = element(by.id('field_qcm'));
  qcmTestSelect = element(by.id('field_qcmTest'));

  async getPageTitle(): Promise<string> {
    return this.pageTitle.getAttribute('jhiTranslate');
  }

  async setLastnameInput(lastname: string): Promise<void> {
    await this.lastnameInput.sendKeys(lastname);
  }

  async getLastnameInput(): Promise<string> {
    return await this.lastnameInput.getAttribute('value');
  }

  async setFirstnameInput(firstname: string): Promise<void> {
    await this.firstnameInput.sendKeys(firstname);
  }

  async getFirstnameInput(): Promise<string> {
    return await this.firstnameInput.getAttribute('value');
  }

  async setEmailInput(email: string): Promise<void> {
    await this.emailInput.sendKeys(email);
  }

  async getEmailInput(): Promise<string> {
    return await this.emailInput.getAttribute('value');
  }

  async setLinkedinInput(linkedin: string): Promise<void> {
    await this.linkedinInput.sendKeys(linkedin);
  }

  async getLinkedinInput(): Promise<string> {
    return await this.linkedinInput.getAttribute('value');
  }

  async setGoogleplusInput(googleplus: string): Promise<void> {
    await this.googleplusInput.sendKeys(googleplus);
  }

  async getGoogleplusInput(): Promise<string> {
    return await this.googleplusInput.getAttribute('value');
  }

  async setRoleInput(role: string): Promise<void> {
    await this.roleInput.sendKeys(role);
  }

  async getRoleInput(): Promise<string> {
    return await this.roleInput.getAttribute('value');
  }

  async qcmSelectLastOption(): Promise<void> {
    await this.qcmSelect
      .all(by.tagName('option'))
      .last()
      .click();
  }

  async qcmSelectOption(option: string): Promise<void> {
    await this.qcmSelect.sendKeys(option);
  }

  getQcmSelect(): ElementFinder {
    return this.qcmSelect;
  }

  async getQcmSelectedOption(): Promise<string> {
    return await this.qcmSelect.element(by.css('option:checked')).getText();
  }

  async qcmTestSelectLastOption(): Promise<void> {
    await this.qcmTestSelect
      .all(by.tagName('option'))
      .last()
      .click();
  }

  async qcmTestSelectOption(option: string): Promise<void> {
    await this.qcmTestSelect.sendKeys(option);
  }

  getQcmTestSelect(): ElementFinder {
    return this.qcmTestSelect;
  }

  async getQcmTestSelectedOption(): Promise<string> {
    return await this.qcmTestSelect.element(by.css('option:checked')).getText();
  }

  async save(): Promise<void> {
    await this.saveButton.click();
  }

  async cancel(): Promise<void> {
    await this.cancelButton.click();
  }

  getSaveButton(): ElementFinder {
    return this.saveButton;
  }
}

export class UtilisateurDeleteDialog {
  private dialogTitle = element(by.id('jhi-delete-utilisateur-heading'));
  private confirmButton = element(by.id('jhi-confirm-delete-utilisateur'));

  async getDialogTitle(): Promise<string> {
    return this.dialogTitle.getAttribute('jhiTranslate');
  }

  async clickOnConfirmButton(): Promise<void> {
    await this.confirmButton.click();
  }
}
