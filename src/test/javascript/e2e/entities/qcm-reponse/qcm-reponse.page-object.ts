import { element, by, ElementFinder } from 'protractor';

export class QcmReponseComponentsPage {
  createButton = element(by.id('jh-create-entity'));
  deleteButtons = element.all(by.css('jhi-qcm-reponse div table .btn-danger'));
  title = element.all(by.css('jhi-qcm-reponse div h2#page-heading span')).first();
  noResult = element(by.id('no-result'));
  entities = element(by.id('entities'));

  async clickOnCreateButton(): Promise<void> {
    await this.createButton.click();
  }

  async clickOnLastDeleteButton(): Promise<void> {
    await this.deleteButtons.last().click();
  }

  async countDeleteButtons(): Promise<number> {
    return this.deleteButtons.count();
  }

  async getTitle(): Promise<string> {
    return this.title.getAttribute('jhiTranslate');
  }
}

export class QcmReponseUpdatePage {
  pageTitle = element(by.id('jhi-qcm-reponse-heading'));
  saveButton = element(by.id('save-entity'));
  cancelButton = element(by.id('cancel-save'));

  reponseTextInput = element(by.id('field_reponseText'));
  reponseImageInput = element(by.id('file_reponseImage'));
  reponseNombreInput = element(by.id('field_reponseNombre'));
  correctInput = element(by.id('field_correct'));
  poidsInput = element(by.id('field_poids'));

  qcmTestResponseSelect = element(by.id('field_qcmTestResponse'));

  async getPageTitle(): Promise<string> {
    return this.pageTitle.getAttribute('jhiTranslate');
  }

  async setReponseTextInput(reponseText: string): Promise<void> {
    await this.reponseTextInput.sendKeys(reponseText);
  }

  async getReponseTextInput(): Promise<string> {
    return await this.reponseTextInput.getAttribute('value');
  }

  async setReponseImageInput(reponseImage: string): Promise<void> {
    await this.reponseImageInput.sendKeys(reponseImage);
  }

  async getReponseImageInput(): Promise<string> {
    return await this.reponseImageInput.getAttribute('value');
  }

  async setReponseNombreInput(reponseNombre: string): Promise<void> {
    await this.reponseNombreInput.sendKeys(reponseNombre);
  }

  async getReponseNombreInput(): Promise<string> {
    return await this.reponseNombreInput.getAttribute('value');
  }

  getCorrectInput(): ElementFinder {
    return this.correctInput;
  }

  async setPoidsInput(poids: string): Promise<void> {
    await this.poidsInput.sendKeys(poids);
  }

  async getPoidsInput(): Promise<string> {
    return await this.poidsInput.getAttribute('value');
  }

  async qcmTestResponseSelectLastOption(): Promise<void> {
    await this.qcmTestResponseSelect
      .all(by.tagName('option'))
      .last()
      .click();
  }

  async qcmTestResponseSelectOption(option: string): Promise<void> {
    await this.qcmTestResponseSelect.sendKeys(option);
  }

  getQcmTestResponseSelect(): ElementFinder {
    return this.qcmTestResponseSelect;
  }

  async getQcmTestResponseSelectedOption(): Promise<string> {
    return await this.qcmTestResponseSelect.element(by.css('option:checked')).getText();
  }

  async save(): Promise<void> {
    await this.saveButton.click();
  }

  async cancel(): Promise<void> {
    await this.cancelButton.click();
  }

  getSaveButton(): ElementFinder {
    return this.saveButton;
  }
}

export class QcmReponseDeleteDialog {
  private dialogTitle = element(by.id('jhi-delete-qcmReponse-heading'));
  private confirmButton = element(by.id('jhi-confirm-delete-qcmReponse'));

  async getDialogTitle(): Promise<string> {
    return this.dialogTitle.getAttribute('jhiTranslate');
  }

  async clickOnConfirmButton(): Promise<void> {
    await this.confirmButton.click();
  }
}
